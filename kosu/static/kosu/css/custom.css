:root {
  --light-green: #d5edeb;
  --green: #63dbd0;
  --brown: #403632;
  --light-grey: #eee;
  --white: #fff;
  --oswald-font: 'Oswald', sans-serif;
}

.number-input-group {
  display: flex;
  align-items: center;
}

.custom-button {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 0;
  border: none;
  background-color: #00aeff;  /* ボタンの背景色を設定 */
  color: white;  /* テキストの色を設定 */
  font-size: 1.2em;
  cursor: pointer;
  width: 30px;
  height: 30px;
  border-radius: 50%;  /* 丸いボタンにする */
  margin: 0 5px;  /* ボタン間のスペースを設定 */
  text-shadow:
    -0.5px -0.5px 0 #000,
     0.5px -0.5px 0 #000,
    -0.5px  0.5px 0 #000,
     0.5px  0.5px 0 #000;
}

.custom-button:hover {
  background-color: #009eb3;  /* ホバー時の背景色を設定 */
}

.form-control {
  margin: 0 10px; /* ボタンとの間にスペースを設ける */
  width: 100px; /* 任意の幅 */
  text-align: left; /* テキストを左詰めにする */
}

.form-control.custom-border {
  border-color: #000000; /* 外形線の色を設定 */
  text-align: left; /* さらにカスタムボーダーでも左詰めにする場合 */
}

.custom-checkbox .form-check-input,
input.big {
  width: 1.25rem;
  height: 1.25rem;
  margin-right: 0.5rem;
  border: 1px solid black;  /* 外形線の色を設定 */
}

.form-check-label {
  display: flex;
  align-items: center;
  cursor: pointer;
}

.no-wrap {
  white-space: nowrap;
}

.text-center {
  text-align: center;
}

.center-div {
  display: flex;
  justify-content: center;
}

#success-message-container {
  position: relative; /* 親要素に位置の基準を設定 */
}

#success-message {
  display: none;
  position: absolute; /* ビューポートに対して絶対配置 */
  top: 50%; /* 上から50%の位置 */
  left: 50%; /* 左から50%の位置 */
  transform: translate(-50%, -50%); /* 真ん中に配置 */
  max-width: 100%; 
  background-color: rgba(0, 0, 0, 0.8);
  color: white;
  text-align: center;
  padding: 20px;
  z-index: 1000;
  box-sizing: border-box;
}

#success-message span { 
  display: block;
  margin: 0 auto;
  white-space: nowrap;
  overflow: hidden; 
  text-overflow: clip;
  font-size: calc(2vw + 2vh + 1vmin);
}

/* スマホ向けの修正 */
@media (max-width: 768px) {
  #success-message {
    font-size: 16px; /* フォントサイズを固定 */
    width: 90%; /* 幅を90%に設定 */
  }
}
/*
#loading {
  background-color: var(--light-grey);
  position: fixed;
  inset: 0;
  z-index: 9999;
  display: grid;
  place-items: center;
}
#loading-screen {
  background-color: var(--light-green);
  position: fixed;
  inset: 0;
  z-index: 9998;
  translate: 0 100vh;
}
#loading p {
  font-size: 2rem;
  font-family: var(--oswald-font);
}

@keyframes sway {
  0% {
    transform: rotate(0deg);
  }
  25% {
    transform: rotate(5deg);
  }
  50% {
    transform: rotate(0deg);
  }
  75% {
    transform: rotate(-5deg);
  }
  100% {
    transform: rotate(0deg);
  }
}
*/

#loading img {
  /* ローディング画面で表示される画像にアニメーション効果を適用 */
  animation: sway 2s infinite ease-in-out; 
  /* 画像の幅を100%に設定（親要素にコンテンツ全体を広げる） */
  width: 100%; 
  /* 画像の高さを300pxに固定（縦方向のサイズ） */
  height: 300px; 
  /* 画像が親要素内で切り取り拡大縮小でフィットするように調整 */
  object-fit: cover; 
}

#loading {
  /* ローディング画面全体の背景色を指定（カスタムCSS変数） */
  background-color: var(--light-grey); 
  /* ローディング画面をページ全体に固定する（スクロールしても位置は変わらない） */
  position: fixed; 
  /* 要素をページ全体に広げる（上下左右のマージンを0に設定） */
  inset: 0; 
  /* レイヤーの重なり順を最前面に設定（他の要素の z-index より上に配置） */
  z-index: 9999; 
  /* 見た目のレイアウトをCSSグリッドに変更 */
  display: grid; 
  /* グリッド内で要素（主に画像やテキスト）を中央揃えにする */
  place-items: center; 
}

#loading-screen {
  /* 別のローディング画面（もしくは背景）の背景色を指定 */
  background-color: var(--light-green); 
  /* ページ全体を覆うようにローディング画面を固定表示 */
  position: fixed; 
  /* 上下左右の位置を画面全体に広げる */
  inset: 0; 
  /* レイヤーの重なり順を「#loading」の次に指定（他のレイヤーの下へ） */
  z-index: 9998; 
  /* 初期状態で画面外に表示される（Y軸方向に100vh分下に移動） */
  transform: translateY(100vh);
}

#loading p {
  /* ローディング画面で表示されるテキストのフォントサイズを2remに設定 */
  font-size: 2rem; 
  /* テキストのフォントを指定（カスタムCSS変数） */
  font-family: var(--oswald-font); 
}

@keyframes sway {
  0% {
    transform: rotate(0deg);
  }
  25% {
    transform: rotate(5deg);
  }
  50% {
    transform: rotate(0deg);
  }
  75% {
    transform: rotate(-5deg);
  }
  100% {
    transform: rotate(0deg);
  }
}
